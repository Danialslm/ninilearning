# Generated by Django 4.0.4 on 2022-07-13 15:51

import apps.content.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('genre', models.CharField(max_length=50, unique=True, verbose_name='genre')),
            ],
            options={
                'verbose_name': 'genre',
                'verbose_name_plural': 'genres',
            },
        ),
        migrations.CreateModel(
            name='Season',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('season_number', models.PositiveSmallIntegerField(verbose_name='season')),
            ],
            options={
                'verbose_name': 'season',
                'verbose_name_plural': 'seasons',
            },
        ),
        migrations.CreateModel(
            name='Episode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('likes_count', models.PositiveSmallIntegerField(default=0, editable=False, verbose_name='likes count')),
                ('dislikes_count', models.PositiveSmallIntegerField(default=0, editable=False, verbose_name='dislikes count')),
                ('popularity', models.PositiveSmallIntegerField(default=0, editable=False, verbose_name='popularity')),
                ('title', models.CharField(max_length=50, verbose_name='title')),
                ('poster', models.ImageField(upload_to=apps.content.models.video_upload_path, verbose_name='poster')),
                ('video', models.FileField(upload_to=apps.content.models.video_upload_path, validators=[apps.content.models.video_format_validator], verbose_name='video')),
                ('pe_subtitle', models.FileField(blank=True, null=True, upload_to=apps.content.models.subtitle_upload_path, verbose_name='persian subtitle')),
                ('en_subtitle', models.FileField(blank=True, null=True, upload_to=apps.content.models.subtitle_upload_path, verbose_name='english subtitle')),
                ('episode_number', models.PositiveSmallIntegerField(default=1, verbose_name='episode number')),
                ('is_vip', models.BooleanField(verbose_name='vip')),
                ('season', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='episodes', to='content.season')),
            ],
            options={
                'verbose_name': 'episode',
                'verbose_name_plural': 'episodes',
                'ordering': ['episode_number'],
            },
        ),
        migrations.CreateModel(
            name='Content',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('likes_count', models.PositiveSmallIntegerField(default=0, editable=False, verbose_name='likes count')),
                ('dislikes_count', models.PositiveSmallIntegerField(default=0, editable=False, verbose_name='dislikes count')),
                ('popularity', models.PositiveSmallIntegerField(default=0, editable=False, verbose_name='popularity')),
                ('pe_name', models.CharField(max_length=120, unique=True, verbose_name='persian name')),
                ('en_name', models.CharField(max_length=120, unique=True, verbose_name='english name')),
                ('slug', models.SlugField(verbose_name='slug')),
                ('age_range', models.CharField(max_length=50, verbose_name='age range')),
                ('country', models.CharField(help_text='Product of which country?', max_length=20, verbose_name='country')),
                ('description', models.TextField(verbose_name='description')),
                ('small_poster', models.ImageField(upload_to=apps.content.models.poster_upload_path, verbose_name='small poster')),
                ('large_poster', models.ImageField(upload_to=apps.content.models.poster_upload_path, verbose_name='large poster')),
                ('duration', models.CharField(max_length=20, verbose_name='duration')),
                ('resolution', models.CharField(max_length=20, verbose_name='resolution')),
                ('content_type', models.CharField(choices=[('S', 'serial'), ('M', 'movie')], db_index=True, max_length=1, verbose_name='content type')),
                ('video', models.FileField(null=True, upload_to=apps.content.models.video_upload_path, validators=[apps.content.models.video_format_validator], verbose_name='video')),
                ('pe_subtitle', models.FileField(blank=True, null=True, upload_to=apps.content.models.subtitle_upload_path, verbose_name='persian subtitle')),
                ('en_subtitle', models.FileField(blank=True, null=True, upload_to=apps.content.models.subtitle_upload_path, verbose_name='english subtitle')),
                ('is_vip', models.BooleanField(default=False, verbose_name='vip')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='created date')),
                ('genres', models.ManyToManyField(related_name='contents', to='content.genre', verbose_name='genre')),
                ('suggestions', models.ManyToManyField(blank=True, to='content.content', verbose_name='suggestions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Movie',
            fields=[
            ],
            options={
                'verbose_name': 'movie',
                'verbose_name_plural': 'movies',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('content.content',),
        ),
        migrations.CreateModel(
            name='Serial',
            fields=[
            ],
            options={
                'verbose_name': 'serial',
                'verbose_name_plural': 'series',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('content.content',),
        ),
        migrations.AddField(
            model_name='season',
            name='serial',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='seasons', to='content.serial', verbose_name='serial'),
        ),
        migrations.AlterUniqueTogether(
            name='season',
            unique_together={('season_number', 'serial')},
        ),
        migrations.AlterUniqueTogether(
            name='episode',
            unique_together={('season', 'episode_number')},
        ),
    ]
